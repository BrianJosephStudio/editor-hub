version: '3.8'

services:
  dependencies:
    container_name: dependencies-${ENVIRONMENT}
    build:
      context: ./
      dockerfile_inline: |
        FROM oven/bun
        WORKDIR /app
        COPY . .
        RUN chmod +X ./workflows/build-libs.sh
    command: ["bun", "run", "build:libs"]
    volumes:
      - root_node_modules:/app/node_modules
      - server_node_modules:/app/server/node_modules
      - clip-tagger_node_modules:/app/apps/clip-tagger/node_modules
      - editor-hub_node_modules:/app/apps/editor-hub/node_modules
      - libs:/app/libs
  server:
    container_name: editor-hub-server-${ENVIRONMENT}
    build:
      context: ./server
      dockerfile_inline: |
        FROM oven/bun
        WORKDIR /app/server
        COPY . .
    command: ["bun", "run", "serve"]
    ports:
      - "${PORT}:${PORT}"
    restart: always
    volumes:
      - root_node_modules:/app/node_modules
      - server_node_modules:/app/server/node_modules
      - libs:/app/libs
      - auth-app:/app//server/apps/authorization/dist
      - clip-tagger:/app/server/public/clip-tagger
      - editor-hub:/app/server/public/editor-hub
      - ./authCode:/app/server/authCode
    depends_on:
      dependencies:
        condition: service_completed_successfully
      authorization:
        condition: service_started
      clip-tagger:
        condition: service_started
      editor-hub:
        condition: service_started
  authorization:
    container_name: authorization-${ENVIRONMENT}
    build:
      context: ./apps/authorization
      dockerfile_inline: |
        FROM oven/bun
        WORKDIR /app
        COPY . .
    command: ["bun", "run", "build"]
    volumes:
      - root_node_modules:/app/node_modules
      - auth-app:/app/dist
    depends_on:
      dependencies:
        condition: service_completed_successfully
  clip-tagger:
    container_name: clip-tagger-${ENVIRONMENT}
    build:
      context: ./apps/clip-tagger
      dockerfile_inline: |
        FROM oven/bun
        WORKDIR /app/clip-tagger
        COPY . .
    command: ["bun", "run", "build"]
    volumes:
      - root_node_modules:/app/node_modules
      - clip-tagger_node_modules:/app/clip-tagger/node_modules
      - libs:/app/libs
      - clip-tagger:/app/clip-tagger/dist
    depends_on:
      dependencies:
        condition: service_completed_successfully
  editor-hub:
    container_name: editor-hub-${ENVIRONMENT}
    build:
      context: ./apps/editor-hub
      dockerfile_inline: |
        FROM oven/bun
        WORKDIR /app/editor-hub
        COPY . .
    command: ["bun", "run", "build"]
    volumes:
      - root_node_modules:/app/node_modules
      - editor-hub_node_modules:/app/editor-hub/node_modules
      - libs:/app/libs
      - editor-hub:/app/editor-hub/dist
    depends_on:
      dependencies:
        condition: service_completed_successfully
volumes:
  auth-app:
  clip-tagger:
  editor-hub:
  root_node_modules:
  server_node_modules:
  clip-tagger_node_modules:
  editor-hub_node_modules:
  libs: